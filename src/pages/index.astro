---
import Layout from '../components/Layout.astro';
import FeedbackForm from '../components/FeedbackForm.astro';
import MeetupEvents from '../components/MeetupEvents.astro';
import UpcomingEvent from '../components/UpcomingEvent.astro';
import HeroContent from '../components/HeroContent.astro';
---

<Layout title="Nashville AI Engineering - AI Meetups & Community">
  <main>
    <div class="relative isolate overflow-hidden bg-gray-900">
      <!-- Background SVG and decorative elements -->
      <svg
        aria-hidden="true"
        class="absolute inset-0 -z-10 size-full mask-[radial-gradient(100%_100%_at_top_right,white,transparent)] stroke-white/10"
      >
        <defs>
          <pattern
            id="983e3e4c-de6d-4c3f-8d64-b9761d1534cc"
            width="200"
            height="200"
            x="50%"
            y="-1"
            patternUnits="userSpaceOnUse"
          >
            <path d="M.5 200V.5H200" fill="none"></path>
          </pattern>
        </defs>
        <svg x="50%" y="-1" class="overflow-visible fill-gray-800/20">
          <path
            d="M-200 0h201v201h-201Z M600 0h201v201h-201Z M-400 600h201v201h-201Z M200 800h201v201h-201Z"
            stroke-width="0"></path>
        </svg>
        <rect
          width="100%"
          height="100%"
          fill="url(#983e3e4c-de6d-4c3f-8d64-b9761d1534cc)"
          stroke-width="0"></rect>
      </svg>

      <div
        aria-hidden="true"
        class="absolute top-10 left-[calc(50%-4rem)] -z-10 transform-gpu blur-3xl sm:left-[calc(50%-18rem)] lg:top-[calc(50%-30rem)] lg:left-48 xl:left-[calc(50%-24rem)]"
      >
        <div
          style="clip-path: polygon(73.6% 51.7%, 91.7% 11.8%, 100% 46.4%, 97.4% 82.2%, 92.5% 84.9%, 75.7% 64%, 55.3% 47.5%, 46.5% 49.4%, 45% 62.9%, 50.3% 87.2%, 21.3% 64.1%, 0.1% 100%, 5.4% 51.1%, 21.4% 63.9%, 58.9% 0.2%, 73.6% 51.7%)"
          class="aspect-1108/632 w-277 bg-linear-to-r from-[#a6cb0b] to-[#daeb64] opacity-20"
        >
        </div>
      </div>

      <div
        class="mx-auto max-w-7xl px-6 pt-10 pb-24 sm:pb-32 lg:flex lg:justify-between lg:gap-x-8 lg:px-8 lg:py-20"
      >
        <HeroContent />
        <UpcomingEvent />
      </div>
    </div>

    <MeetupEvents />

    <FeedbackForm />
    <div class="bg-gray-900 py-16">
      <div class="mx-auto max-w-7xl px-6 lg:px-8">
        <div class="mx-auto max-w-2xl text-center">
          <h2 class="text-3xl font-bold tracking-tight text-white sm:text-4xl">
            Need Meetup Ideas?
          </h2>
          <p class="mt-4 text-lg text-gray-300">
            Get inspired with AI engineering topics for presentations or discussions.
          </p>
          <div class="mt-8">
            <button 
              id="topic-generator" 
              class="btn btn-primary btn-lg"
            >
              Generate a Meetup Topic
            </button>
          </div>
          <div id="topic-display" class="mt-8 hidden">
            <div class="rounded-lg bg-white/5 p-6 text-left">
              <div class="flex items-center gap-3 mb-3">
                <span id="topic-type" class="inline-flex items-center rounded-full px-3 py-1 text-sm font-medium bg-lime-500/20 text-lime-300 ring-1 ring-inset ring-lime-500/30"></span>
                <span id="topic-difficulty" class="inline-flex items-center rounded-full px-3 py-1 text-sm font-medium bg-blue-500/20 text-blue-300 ring-1 ring-inset ring-blue-500/30"></span>
              </div>
              <h3 id="topic-title" class="text-xl font-bold text-white mb-3"></h3>
              <p id="topic-description" class="text-gray-300"></p>
            </div>
          </div>
        </div>
      </div>
    </div>

    <script>
      document.getElementById('topic-generator')?.addEventListener('click', async function(e) {
        const button = e.target as HTMLButtonElement;
        const originalText = button.textContent;
        button.disabled = true;
        button.textContent = 'Generating...';

        try {
          const response = await fetch('/api/meetup-topics');
          const topic = await response.json();
          
          // Display the topic
          document.getElementById('topic-type')!.textContent = topic.type;
          document.getElementById('topic-difficulty')!.textContent = topic.difficulty;
          document.getElementById('topic-title')!.textContent = topic.title;
          document.getElementById('topic-description')!.textContent = topic.description;
          
          // Show the display
          document.getElementById('topic-display')!.classList.remove('hidden');
          
          // Scroll to the topic
          document.getElementById('topic-display')!.scrollIntoView({ behavior: 'smooth' });
          
        } catch (error) {
          console.error('Error fetching topic:', error);
          console.error('Error details:', error.message);
          button.textContent = 'Error - Try Again';
          setTimeout(() => {
            button.textContent = originalText;
            button.disabled = false;
          }, 2000);
          return;
        }
        
        button.textContent = originalText;
        button.disabled = false;
      });
    </script>
  </main>
</Layout>
