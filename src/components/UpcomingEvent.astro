---
// UpcomingEvent component to display the next meetup in the hero section
import Button from './Button.astro';
---

<div class="flex items-stretch">
  <div
    id="upcoming-event-container"
    class="w-full max-w-md rounded-xl bg-white/2.5 p-2 ring-1 ring-white/10 ring-inset lg:p-4 flex"
  >
    <!-- Default content while loading -->
    <div class="w-full p-6 text-center flex flex-col justify-center">
      <div class="animate-pulse">
        <div class="h-4 bg-white/10 rounded mb-4"></div>
        <div class="h-6 bg-white/10 rounded mb-2"></div>
        <div class="h-4 bg-white/10 rounded mb-4"></div>
        <div class="h-8 bg-lime-500/5 rounded w-32 mx-auto"></div>
      </div>
    </div>
  </div>
</div>

<script>
  // Meetup API endpoint - trying the newer v3 API structure
  const GROUP_URLNAME = 'nashville-ai-engineering';
  const UPCOMING_URL = `https://api.meetup.com/gql`;

  // GraphQL query for upcoming events
  const UPCOMING_QUERY = `
    query {
      groupByUrlname(urlname: "${GROUP_URLNAME}") {
        upcomingEvents(input: {first: 1}) {
          edges {
            node {
              id
              title
              dateTime
              eventUrl
              going
              maxTickets
            }
          }
        }
      }
    }
  `;

  // Format date for display
  function formatEventDate(dateString) {
    const date = new Date(dateString);
    return date.toLocaleDateString('en-US', {
      weekday: 'long',
      month: 'long',
      day: 'numeric',
      year: 'numeric',
    });
  }

  // Format time for display
  function formatEventTime(dateString) {
    const date = new Date(dateString);
    return date.toLocaleTimeString('en-US', {
      hour: 'numeric',
      minute: '2-digit',
      timeZoneName: 'short',
    });
  }

  // Create upcoming event display
  function createUpcomingEventDisplay(event) {
    const eventDate = formatEventDate(event.time);
    const eventTime = formatEventTime(event.time);
    const rsvpCount = event.yes_rsvp_count || 0;
    const maxRsvp = event.rsvp_limit || 0;
    const rsvpText = maxRsvp > 0 ? `${rsvpCount}/${maxRsvp}` : `${rsvpCount}`;

    return `
      <div class="w-full h-full rounded-md bg-gradient-to-br from-neutral-50/5 to-neutral-100/5 p-6 text-center flex flex-col justify-center lg:min-w-sm">
        <div class="mb-4">
          <div class="inline-flex items-center rounded-full bg-lime-500/20 px-3 py-1 text-sm font-medium text-lime-300 ring-1 ring-inset ring-lime-500/30">
            Next Meetup
          </div>
        </div>
        
        <h3 class="text-3xl font-bold text-white mb-3 line-clamp-2">
          ${event.name}
        </h3>
        
        <div class="space-y-2 text-gray-300 mb-4 text-lg">
          <div class="flex items-center justify-center gap-2">
            <svg class="w-4 h-4 text-lime-400 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd" />
            </svg>
            <span class="truncate">${eventDate}</span>
          </div>
          
          <div class="flex items-center justify-center gap-2">
            <svg class="w-4 h-4 text-lime-400 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z" clip-rule="evenodd" />
            </svg>
            <span class="truncate">${eventTime}</span>
          </div>
          
          <div class="flex items-center justify-center gap-2">
            <svg class="w-4 h-4 text-lime-400 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
              <path d="M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3zM6 8a2 2 0 11-4 0 2 2 0 014 0zM16 18v-3a5.972 5.972 0 00-.75-2.906A3.005 3.005 0 0119 15v3h-3zM4.75 12.094A5.973 5.973 0 004 15v3H1v-3a3 3 0 013.75-2.906z" />
            </svg>
            <span class="truncate">${rsvpText} attending</span>
          </div>
        </div>
        
        <a href="${event.link}" target="_blank" rel="noopener noreferrer" 
           class="btn btn-primary btn-md">
          RSVP on Meetup
          <svg class="ml-2 -mr-1 w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z" clip-rule="evenodd" />
          </svg>
        </a>
      </div>
    `;
  }

  // Fetch and display upcoming event
  async function fetchUpcomingEvent() {
    try {
      const response = await fetch(UPCOMING_URL, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          query: UPCOMING_QUERY,
        }),
      });

      console.log('Response status:', response.status);
      console.log('Response ok:', response.ok);

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const data = await response.json();
      console.log('Data received:', data);

      const container = document.getElementById('upcoming-event-container');

      // Extract events from GraphQL response
      const events = data?.data?.groupByUrlname?.upcomingEvents?.edges || [];

      if (events.length > 0) {
        const event = events[0].node;
        console.log('Displaying event:', event);

        // Transform GraphQL data to match our display function
        const transformedEvent = {
          name: event.title,
          time: event.dateTime,
          link: event.eventUrl,
          yes_rsvp_count: event.going,
          rsvp_limit: event.maxTickets,
        };

        container.innerHTML = createUpcomingEventDisplay(transformedEvent);
      } else {
        console.log('No events found, showing fallback');
        container.innerHTML = `
          <div class="w-full h-full rounded-md bg-gradient-to-br from-lime-500/20 to-lime-500/20 p-6 text-center flex flex-col justify-center">
            <div class="mb-4">
              <div class="inline-flex items-center rounded-full bg-lime-500/20 px-3 py-1 text-sm font-medium text-lime-300 ring-1 ring-inset ring-lime-500/30">
                No Upcoming Events
              </div>
            </div>
            
            <h3 class="text-xl font-bold text-white mb-3">
              Check Back Soon
            </h3>
            
            <p class="text-gray-300 mb-4 text-sm">
              We're planning our next meetup. Follow us on Meetup for updates!
            </p>
            
            <a href="https://www.meetup.com/${GROUP_URLNAME}" target="_blank" rel="noopener noreferrer" 
               class="btn btn-secondary btn-md">
              Visit Our Meetup Group
              <svg class="ml-2 -mr-1 w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z" clip-rule="evenodd" />
              </svg>
            </a>
          </div>
        `;
      }
    } catch (error) {
      console.error('Error fetching upcoming event:', error);

      const container = document.getElementById('upcoming-event-container');
      container.innerHTML = `
        <div class="w-full h-full rounded-md bg-gradient-to-br from-indigo-500/20 to-lime-500/20 p-6 text-center flex flex-col justify-center">
          <div class="text-gray-300">
            <p>Unable to load upcoming event.</p>
            <p class="text-sm mt-2">Error: ${error.message}</p>
            <p class="text-sm mt-2">Please check our Meetup group for details.</p>
          </div>
        </div>
      `;
    }
  }

  // Fetch event on page load
  fetchUpcomingEvent();

  // Refresh every hour
  setInterval(fetchUpcomingEvent, 60 * 60 * 1000);
</script>
